.container

-# %h3= @ipBreakDown[0].data
-# - @ipBreakDown[0].data.each {|k,v| @bar << "#{v}"}
-# -# %h3= @Gip[0].data.each {|k,v| "#{k} is #{v}"}
-# %ul
-#   - @ipBreakDown[0].data.each do |k,v|
-#     %li= "#{k} is #{v}"
-# %p= @var
-# %p= @var.class

:javascript

  var Detector = function() {
      // a font will be compared against all the three default fonts.
      // and if it doesn't match all 3 then that font is not available.
      var baseFonts = ['monospace', 'sans-serif', 'serif'];

      //we use m or w because these two characters take up the maximum width.
      // And we use a LLi so that the same matching fonts can get separated
      var testString = "mmmmmmmmmmlli";

      //we test using 72px font size, we may use any size. I guess larger the better.
      var testSize = '72px';

      var h = document.getElementsByTagName("body")[0];

      // create a SPAN in the document to get the width of the text we use to test
      var s = document.createElement("span");
      s.style.fontSize = testSize;
      s.innerHTML = testString;
      var defaultWidth = {};
      var defaultHeight = {};
      for (var index in baseFonts) {
          //get the default width for the three base fonts
          s.style.fontFamily = baseFonts[index];
          h.appendChild(s);
          defaultWidth[baseFonts[index]] = s.offsetWidth; //width for the default font
          defaultHeight[baseFonts[index]] = s.offsetHeight; //height for the defualt font
          h.removeChild(s);
      }

      function detect(font) {
          var detected = false;
          for (var index in baseFonts) {
              s.style.fontFamily = font + ',' + baseFonts[index]; // name of the font along with the base font for fallback.
              h.appendChild(s);
              var matched = (s.offsetWidth != defaultWidth[baseFonts[index]] || s.offsetHeight != defaultHeight[baseFonts[index]]);
              h.removeChild(s);
              detected = detected || matched;
          }
          return detected;
      }

      this.detect = detect;
  };

  // ************************************************************************

  function identify_plugins(){
  // fetch and serialize plugins
  var plugins = "";
  // in Mozilla and in fact most non-IE browsers, this is easy
  if (navigator.plugins) {
    var np = navigator.plugins;
    var plist = new Array();
    // sorting navigator.plugins is a right royal pain
    // but it seems to be necessary because their order
    // is non-constant in some browsers
    for (var i = 0; i < np.length; i++) {
      plist[i] = np[i].name + "; ";
      plist[i] += np[i].description + "; ";
      plist[i] += np[i].filename + ";";
      for (var n = 0; n < np[i].length; n++) {
        plist[i] += " (" + np[i][n].description +"; "+ np[i][n].type +
                   "; "+ np[i][n].suffixes + ")";
      }
      plist[i] += ". ";
    }
    plist.sort();
    for (i = 0; i < np.length; i++)
      plugins+= "Plugin "+i+": " + plist[i];
    }
    // in IE, things are much harder; we use PluginDetect to get less
    // information (only the plugins listed below & their version numbers)
    if (plugins == "") {
      var pp = new Array();
      pp[0] = "Java"; pp[1] = "QuickTime"; pp[2] = "DevalVR"; pp[3] = "Shockwave";
      pp[4] = "Flash"; pp[5] = "WindowsMediaplayer"; pp[6] = "Silverlight";
      pp[7] = "VLC";
      var version;
      for ( p in pp ) {
        version = PluginDetect.getVersion(pp[p]);
        if (version)
          plugins += pp[p] + " " + version + "; "
      }
      plugins += ieAcrobatVersion();
    }
    return plugins;
  }
  var browserPlugins = identify_plugins();
  // ************************************************************************

%h3 plugins
%p
  :javascript
    document.write(browserPlugins);
%h3 fonts
%p
  :javascript

    var detective = new Detector();
    var fontDict = new Array();

    for(var i in fontList) {
      if (detective.detect(fontList[i]) == false) {
        fontDict.push(fontList[i] + " false")
      } else {
        fontDict.push(fontList[i] + " true")
      }
    }

    for (var i = 0; i < fontDict.length; i++) {
      document.write(fontDict[i] + "; ");
    }
